# do not modify these
root: ./
name: simulation
socket_name: mrs
attach: false
tmux_options: -f /etc/ctu-mrs/tmux.conf
# you can modify these
pre_window: export UAV_NAME=uav1; export RUN_TYPE=simulation; export UAV_TYPE=naki
startup_window: status
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; export GAZEBO_PLUGIN_PATH=/opt/ros/noetic/lib:$GAZEBO_PLUGIN_PATH; roslaunch mrs_uav_gazebo_simulation simulation.launch world_file:=/home/nicolo/tube gui:=false
        #- waitForRos; export GAZEBO_PLUGIN_PATH=/opt/ros/noetic/lib:$GAZEBO_PLUGIN_PATH; roslaunch mrs_uav_gazebo_simulation simulation.launch world_name:=grass_plane gui:=true
        - waitForGazebo; rosservice call /mrs_drone_spawner/spawn "1 --$UAV_TYPE --pos -0.0 0.0 0.3 0.0"
        - waitForControl; gz camera -c gzclient_camera -f $UAV_NAME; history -s gz camera -c gzclient_camera -f $UAV_NAME
  - status:
      layout: tiled
      panes:
        - waitForHw; roslaunch mrs_uav_status status.launch
  - hw_api:
      layout: tiled
      panes:
        - waitForTime; roslaunch mrs_uav_px4_api api.launch
  - core:
      layout: tiled
      panes:
        - waitForHw; roslaunch mrs_uav_core core.launch
          platform_config:=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml
          custom_config:=./config/custom_config.yaml
          world_config:=./config/world_config.yaml
          network_config:=./config/network_config.yaml
  - takeoff:
      layout: tiled
      panes:
        - waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - 'waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard'
  - path:
      layout: even-vertical
      panes:
        - 'history -s ./plan_path.py'
        - 'history -s rosservice call /uav1/control_manager/goto_trajectory_start'
        - 'history -s rosservice call /uav1/control_manager/start_trajectory_tracking'
  - wrench_estimator:
      layout: tiled
      panes:
        - waitForControl; roslaunch bump_tolerant_control external_wrench_estimator.launch UAV_NAME:=$UAV_NAME       
  - goto:
      layout: tiled
      panes:
        - 'history -s rosservice call /$UAV_NAME/control_manager/goto \"goal: \[-30.0, 30.0, 1.35, 0.0\]\"'
 
  - example_waypoint_flier:
      layout: tiled
      panes:
        - waitForControl; roslaunch example_waypoint_flier example_waypoint_flier.launch
        - 'history -s rosservice call /$UAV_NAME/example_waypoint_flier/fly_to_first_waypoint'
        - 'history -s rosservice call /$UAV_NAME/example_waypoint_flier/start_waypoints_following'
        - 'history -s rosservice call /$UAV_NAME/example_waypoint_flier/stop_waypoints_following'
  - rviz:
      layout: tiled
      panes:
        - waitForControl; roslaunch mrs_uav_core rviz.launch
        - waitForControl; roslaunch mrs_rviz_plugins load_robot.launch
  - layout:
      layout: tiled
      panes:
        - waitForControl; sleep 3; ~/.i3/layout_manager.sh ./layout.json
  - plot_fm:
      layout: tiled
      panes:
        - 'waitForControl; history -s plotjuggler-ros'
